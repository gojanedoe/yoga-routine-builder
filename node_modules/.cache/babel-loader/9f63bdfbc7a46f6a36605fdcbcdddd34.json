{"ast":null,"code":"var _jsxFileName = \"/Users/kharbaugh829/Documents/LaunchCode/yoga-routine-builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DraggablePoseCard from './components/DraggablePoseCard';\nimport PoseBank from './components/PoseBank';\nimport RoutineBuilder from './components/RoutineBuilder';\nimport '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport yogaPoses from './data/yogaPoses.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport RoutinePlayback from './RoutinePlayback'; // const dummyPoses = [\n//   { id: 'pose-1', name: 'Pose 1' },\n//   { id: 'pose-2', name: 'Pose 2' },\n//   { id: 'pose-3', name: 'Pose 3' },\n//   { id: 'pose-4', name: 'Pose 4' },\n//   { id: 'pose-5', name: 'Pose 5' },\n//   { id: 'pose-6', name: 'Pose 6' },\n//   { id: 'pose-7', name: 'Pose 7' },\n//   { id: 'pose-8', name: 'Pose 8' },\n//   { id: 'pose-9', name: 'Pose 9' },\n//   { id: 'pose-10', name: 'Pose 10' }\n// ];\n// const Routine = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [poses, updatePoses] = useState(yogaPoses);\n  const [routine, updateRoutine] = useState([]);\n\n  const handleOnDragEnd = result => {\n    // If pose is not dragged to a valid destination, keep list the same\n    if (!result.destination) return;\n    const source = result.source.droppableId;\n    const sourceIndex = result.source.index;\n    const destination = result.destination.droppableId;\n    const destinationIndex = result.destination.index;\n\n    if (source === destination) {\n      // Grab poses from original list\n      const items = Array.from(source === 'column-1' ? poses : routine); // Grab moving pose & remove from list\n\n      const [reorderedItem] = items.splice(sourceIndex, 1); // Add moving pose to new spot (index) in list\n\n      items.splice(destinationIndex, 0, reorderedItem); //Update state\n\n      source === 'column-1' ? updatePoses(items) : updateRoutine(items);\n    } else if (source === 'column-1' && destination === 'column-2') {\n      // Grab poses from original lists\n      const fromItems = Array.from(poses);\n      const toItems = Array.from(routine); // Grab moving pose & remove from list\n\n      const [reorderedItem] = fromItems.splice(sourceIndex, 1); // Add moving pose to new spot (index) in list\n\n      toItems.splice(destinationIndex, 0, reorderedItem); //Update state\n\n      updatePoses(fromItems);\n      updateRoutine(toItems);\n    } else if (source === 'column-2' && destination === 'column-1') {\n      // Grab poses from original lists\n      const fromItems = Array.from(routine);\n      const toItems = Array.from(poses); // Grab moving pose & remove from list\n\n      const [reorderedItem] = fromItems.splice(sourceIndex, 1); // Add moving pose to new spot (index) in list\n\n      toItems.splice(destinationIndex, 0, reorderedItem); //Update state\n\n      updatePoses(toItems);\n      updateRoutine(fromItems);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"landingContainer\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"landingGrid\",\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(PoseBank, {\n          poses: poses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoutineBuilder, {\n          routine: routine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Start Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          fullScreen: true,\n          open: open,\n          onClose: handleClose,\n          TransitionComponent: Transition,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            className: classes.appBar,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"start\",\n                color: \"inherit\",\n                onClick: handleClose,\n                \"aria-label\": \"close\",\n                children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                className: classes.title,\n                children: \"Sound\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                autoFocus: true,\n                color: \"inherit\",\n                onClick: handleClose,\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Phone ringtone\",\n                secondary: \"Titania\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Default notification ringtone\",\n                secondary: \"Tethys\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Save Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I5nmPiFkqQShPY/biYyP0xTdQck=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kharbaugh829/Documents/LaunchCode/yoga-routine-builder/src/App.js"],"names":["React","useState","DraggablePoseCard","PoseBank","RoutineBuilder","Grid","Container","Card","Button","yogaPoses","makeStyles","Dialog","Divider","AppBar","Toolbar","IconButton","Typography","CancelIcon","Slide","DragDropContext","Droppable","Draggable","RoutinePlayback","App","poses","updatePoses","routine","updateRoutine","handleOnDragEnd","result","destination","source","droppableId","sourceIndex","index","destinationIndex","items","Array","from","reorderedItem","splice","fromItems","toItems","handleClickOpen","open","handleClose","Transition","classes","appBar","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DraggablePoseCard from './components/DraggablePoseCard';\nimport PoseBank from './components/PoseBank';\nimport RoutineBuilder from './components/RoutineBuilder';\nimport '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { Container } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport yogaPoses from './data/yogaPoses.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './App.css';\nimport RoutinePlayback from './RoutinePlayback';\n// const dummyPoses = [\n//   { id: 'pose-1', name: 'Pose 1' },\n//   { id: 'pose-2', name: 'Pose 2' },\n//   { id: 'pose-3', name: 'Pose 3' },\n//   { id: 'pose-4', name: 'Pose 4' },\n//   { id: 'pose-5', name: 'Pose 5' },\n//   { id: 'pose-6', name: 'Pose 6' },\n//   { id: 'pose-7', name: 'Pose 7' },\n//   { id: 'pose-8', name: 'Pose 8' },\n//   { id: 'pose-9', name: 'Pose 9' },\n//   { id: 'pose-10', name: 'Pose 10' }\n// ];\n\n// const Routine = [];\n\nfunction App() {\n  const [poses, updatePoses] = useState(yogaPoses);\n  const [routine, updateRoutine] = useState([]);\n\n  const handleOnDragEnd = result => {\n    // If pose is not dragged to a valid destination, keep list the same\n    if (!result.destination) return;\n\n    const source = result.source.droppableId;\n    const sourceIndex = result.source.index;\n    const destination = result.destination.droppableId;\n    const destinationIndex = result.destination.index;\n\n    if (source === destination) {\n      // Grab poses from original list\n      const items = Array.from(source === 'column-1' ? poses : routine);\n\n      // Grab moving pose & remove from list\n      const [reorderedItem] = items.splice(sourceIndex, 1);\n\n      // Add moving pose to new spot (index) in list\n      items.splice(destinationIndex, 0, reorderedItem);\n\n      //Update state\n      source === 'column-1' ? updatePoses(items) : updateRoutine(items);\n    } else if (source === 'column-1' && destination === 'column-2') {\n      // Grab poses from original lists\n      const fromItems = Array.from(poses);\n      const toItems = Array.from(routine);\n\n      // Grab moving pose & remove from list\n      const [reorderedItem] = fromItems.splice(sourceIndex, 1);\n\n      // Add moving pose to new spot (index) in list\n      toItems.splice(destinationIndex, 0, reorderedItem);\n\n      //Update state\n      updatePoses(fromItems);\n      updateRoutine(toItems);\n    } else if (source === 'column-2' && destination === 'column-1') {\n      // Grab poses from original lists\n      const fromItems = Array.from(routine);\n      const toItems = Array.from(poses);\n\n      // Grab moving pose & remove from list\n      const [reorderedItem] = fromItems.splice(sourceIndex, 1);\n\n      // Add moving pose to new spot (index) in list\n      toItems.splice(destinationIndex, 0, reorderedItem);\n\n      //Update state\n      updatePoses(toItems);\n      updateRoutine(fromItems);\n    }\n  };\n\n  return (\n\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Container className=\"landingContainer\">\n        <Grid\n          container\n          className=\"landingGrid\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* ---- LEFT COLUMN ---- */}\n          <PoseBank poses={poses} />\n\n\n\n          {/* ---- MIDDLE COLUMN ---- */}\n          <Grid item xs={4}>\n            →\n          </Grid>\n          {/* ---- RIGHT COLUMN ---- */}\n          <RoutineBuilder routine={routine} />\n\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Start Routine\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CancelIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n          <Button variant=\"outlined\">Save Routine</Button>\n        </Grid>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}